import React, { useEffect, useState } from "react";
import api from "../api/axios";

const ProductPage = () => {
  const [products, setProducts] = useState([]);
  const [editingProduct, setEditingProduct] = useState(null);
  const [formData, setFormData] = useState({
    name: "",
    description: "",
    price: "",
    categoryId: null,
  });
  const handleCancelEdit = () => {
    setEditingProduct(null);
  };
  useEffect(() => {
    fetchProducts();
  }, []);

  const fetchProducts = () => {
    api.get("/api/products?page=0&size=10")
      .then((res) => {
        const productList = res.data.content || [];
        console.log("Fetched products:", productList);
        setProducts(productList);
      })
      .catch(() => setProducts([]));
  };

  const handleAddToWishlist = (productId) => {
    api.post(`/api/wishlist/${productId}`)
      .then(() => alert("โ ุชูุช ุงูุฅุถุงูุฉ ุฅูู ุงูููุถูุฉ!"))
      .catch(() => alert("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุฅุถุงูุฉ"));
  };

  const handleDelete = (productId) => {
    if (window.confirm("ูู ุฃูุช ูุชุฃูุฏ ูู ุญุฐู ุงูููุชุฌุ")) {
      api.delete(`/api/products/${productId}`)
        .then(() => {
          alert("โ ุชู ุญุฐู ุงูููุชุฌ");
          fetchProducts();
        })
        .catch(() => alert("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุญุฐู"));
    }
  };
  const handleEditClick = (product) => {
    console.log("Product selected for editing:", product);
    setEditingProduct(product);
    setFormData({
      name: product.name,
      description: product.description,
      price: product.price,
      categoryId: product.category ? product.category.id : null,
    });
  };
  

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleUpdate = () => {
    if (!editingProduct || !editingProduct.id) {
      alert("ุฎุทุฃ: ูุง ููุฌุฏ ููุชุฌ ูุญุฏุฏ ููุชุญุฏูุซ");
      console.error("editingProduct ุฃู editingProduct.id ุบูุฑ ูุนุฑู:", editingProduct);
      return;
    }
  
    console.log("Updating product with id:", editingProduct.id);
  
    const payload = {
      name: formData.name,
      description: formData.description,
      price: parseFloat(formData.price) || 0,
      categoryId: formData.categoryId ? Number(formData.categoryId) : null,
    };
  
    api.put(`/api/products/${editingProduct.id}`, payload)
      .then(() => {
        alert("โ ุชู ุชุญุฏูุซ ุงูููุชุฌ");
        setEditingProduct(null);
        fetchProducts();
      })
      .catch((err) => {
        alert("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุชุญุฏูุซ");
        console.error("Update error:", err.response?.data || err);
      });
  };

  return (
    <div style={{ padding: "20px" }}>
      <h2>๐ฆ ุงูููุชุฌุงุช ุงููุชุงุญุฉ</h2>

      {editingProduct && (
        <div style={{ marginBottom: "20px", border: "1px solid #ccc", padding: "10px" }}>
          <h3>ุชุนุฏูู ุงูููุชุฌ: {editingProduct.name}</h3>
          <input
            type="text"
            name="name"
            placeholder="ุงูุงุณู"
            value={formData.name}
            onChange={handleInputChange}
          />
          <br />
          <textarea
            name="description"
            placeholder="ุงููุตู"
            value={formData.description}
            onChange={handleInputChange}
            rows={3}
          />
          <br />
          <input
            type="number"
            name="price"
            placeholder="ุงูุณุนุฑ"
            value={formData.price  || ""}
            onChange={handleInputChange}
          />
          <br />
          <button onClick={handleUpdate}>ุญูุธ ุงูุชุนุฏููุงุช</button>
          <button onClick={handleCancelEdit} style={{ marginLeft: "10px" }}>ุฅูุบุงุก</button>
        </div>
      )}

      <div style={{ display: "flex", flexWrap: "wrap", gap: "20px" }}>
        {products.map((product) => (
          <div key={product.id} style={{ border: "1px solid #ddd", padding: "10px", width: "250px" }}>
            <h4>{product.name}</h4>
            <p>{product.description}</p>
            <p>๐ต {product.price} ุฌููู</p>
            <p>๐ค ุตุงุญุจ ุงูููุชุฌ: {product.ownerUsername || "ุบูุฑ ูุนุฑูู"}</p>
            <p>๐ท๏ธ ุงูุชุตููู: {product.categoryName || "ุบูุฑ ูุตูู"}</p>
            <button onClick={() => handleAddToWishlist(product.id)}>โค๏ธ ุฃุถู ุฅูู ุงูููุถูุฉ</button>
            <button onClick={() => handleEditClick(product)} style={{ marginLeft: "10px" }}>โ๏ธ ุชุนุฏูู</button>
            <button onClick={() => handleDelete(product.id)} style={{ marginLeft: "10px", color: "red" }}>๐๏ธ ุญุฐู</button>
          </div>
        ))}
      </div>
    </div>
  );
};

export default ProductPage;
